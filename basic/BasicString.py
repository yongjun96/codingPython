print("021 문자열 인덱싱")
print("letters가 바인딩하는 문자열에서 첫번째와 세번째 문자를 출력하세요.")

string021 = "letters"

print(string021[0], string021[2])

print("----------------------------------------------------------")

print("022 문자열 슬라이싱")
print("자동차 번호가 다음과 같을 때 뒤에 4자리만 출력하세요.")

license_plate = "24가 2210"

# 문자열에서 여러 글자를 가져오는 것을 슬라이싱이라고 부릅니다.
# 음수 값은 문자열의 뒤에서부터 인덱싱 또는 슬라이싱함을 의미합니다.
# 슬라이싱에서 시작 인덱스를 생략하면 0으로 간주하고 끝 인덱스를 생략하면 문자열의 끝을 의미합니다.
print(license_plate[-4:])


print("----------------------------------------------------------")

print("023 문자열 인덱싱")
print("아래의 문자열에서 '홀' 만 출력하세요.")
string = "홀짝홀짝홀짝"

# 슬라이싱할 때 `시작인덱스:끝인덱스:오프셋`을 지정할 수 있습니다.
# String[start:end:step]
print(string[::2])

print("----------------------------------------------------------")

print("024 문자열 슬라이싱")
print("문자열을 거꾸로 뒤집어 출력하세요.")

string = "PYTHON"

# 기본 값으로 step 은 1이고 1은 문자열 처음부터 시작 / -1은 문자열 끝부터 시작
print(string[::-1])

print("----------------------------------------------------------")

print("025 문자열 치환")
print("아래의 전화번호에서 하이푼 ('-')을 제거하고 출력하세요.")

phone_number = "010-1111-2222"

phone_number_replace = phone_number.replace("-", " ")

print(phone_number_replace)

print("----------------------------------------------------------")

print("026 문자열 다루기")
print("25번 문제의 전화번호를 아래와 같이 모두 붙여 출력하세요.")

phone_number_replace = phone_number.replace("-", "")

print(phone_number_replace)

print("----------------------------------------------------------")

print("027 문자열 다루기")
print("url 에 저장된 웹 페이지 주소에서 도메인을 출력하세요.")

url = "http://sharebook.kr"

url_split = url.split('.')
print(url_split[-1])

print("----------------------------------------------------------")

print("028 문자열은 immutable")
print("아래 코드의 실행 결과를 예상해보세요.")

lang = 'python'
# lang[0] = 'P'
# print(lang)

print("문자열은 수정할 수 없습니다. 실행 결과를 확인해보면 문자열이 할당(assignment) 메서드를 지원하지 않음을 알 수 있습니다.")

print("----------------------------------------------------------")

print("029 replace 메서드")
print("아래 문자열에서 소문자 'a'를 대문자 'A'로 변경하세요.")

string = 'abcdfe2a354a32a'
string_replace = string.replace("a", "A")

print(string_replace)

print("----------------------------------------------------------")

print("030 replace 메서드")
print("아래 코드의 실행 결과를 예상해보세요.")

string = 'abcd'
string.replace('b', 'B')
print(string)
print("문자열은 변경할 수 없다. 다른 변수에 저장을 시키는 것 뿐 변환은 되지 않는다.")

print("----------------------------------------------------------")

print("031 문자열 합치기")
print("아래 코드의 실행 결과를 예상해보세요.")
a = "3"
b = "4"
print(a + b)
print("문자열 34가 출력, 정수가 아님")

print("----------------------------------------------------------")

print("032 문자열 곱하기")
print("아래 코드의 실행 결과를 예상해보세요.")

print("Hi" * 3)
print("Hi가 3번 합쳐진 문자열 출력 -> HiHiHi")

print("----------------------------------------------------------")

print("033 문자열 곱하기")
print("화면에 '-'를 80개 출력하세요.")

print("-" * 80)

print("----------------------------------------------------------")

print("034 문자열 곱하기")
print("변수에 다음과 같은 문자열이 바인딩되어 있습니다.")
print("변수에 문자열 더하기와 문자열 곱하기를 사용해서 아래와 같이 출력해보세요.")
# python java python java python java python java

t1 = 'python'
t2 = 'java'

t3 = t1 + " " + t2 + " "

print(t3 * 4)

print("----------------------------------------------------------")

print("035 문자열 출력")
print("변수에 다음과 같이 문자열과 정수가 바인딩되어 있을 때 % formatting을 사용해서 다음과 같이 출력해보세요.")
name1 = "김민수"
age1 = 10
name2 = "이철희"
age2 = 13
# 이름: 김민수 나이: 10
# 이름: 이철희 나이: 13

print("이름: %s 나이: %d" %(name1, age1))
print("이름: %s 나이: %d" %(name2, age2))

print("----------------------------------------------------------")

print("036 문자열 출력")
print("문자열의 format( ) 메서드를 사용해서 035번 문제를 다시 풀어보세요.")

print("이름: {} 나이: {}".format(name1, age1))
print("이름: {} 나이: {}".format(name2, age2))

print("----------------------------------------------------------")

print("037 문자열 출력")
print("파이썬 3.6부터 지원하는 f-string을 사용해서 035번 문제를 다시 풀어보세요.")

print(f"이름: {name1} 나이: {age1}")
print(f"이름: {name2} 나이: {age2}")

print("----------------------------------------------------------")

print("038 컴마 제거하기")
print("삼성전자의 상장주식수가 다음과 같습니다. 컴마를 제거한 후 이를 정수 타입으로 변환해보세요.")

상장주식수 = "5,969,782,550"
상장주식수_replace = 상장주식수.replace(",", "")
상장주식수_int = int(상장주식수_replace)

print(상장주식수_int, type(상장주식수_int))

print("----------------------------------------------------------")

print("039 문자열 슬라이싱")
print("다음과 같은 문자열에서 '2020/03'만 출력하세요.")

분기 = "2020/03(E) (IFRS연결)"

분기_split = 분기.split("(")

print(분기_split[0] + " 또는 " + 분기[:7])

print("----------------------------------------------------------")

print("040 strip 메서드")
print("문자열의 좌우의 공백이 있을 때 이를 제거해보세요.")

data = "   삼성전자    "
data_strip = data.strip()
print("strip() -> 좌우의 공백 제거")
print(data_strip)

print("----------------------------------------------------------")

print("041 upper 메서드")
print("다음과 같은 문자열이 있을 때 이를 대문자 BTC_KRW로 변경하세요.")

ticker = "btc_krw"

print(ticker.upper())

print("----------------------------------------------------------")

print("042 lower 메서드")
print("다음과 같은 문자열이 있을 때 이를 소문자 btc_krw로 변경하세요.")

ticker = "BTC_KRW"

print(ticker.lower())

print("----------------------------------------------------------")

print("043 capitalize 메서드")
print("문자열 'hello'가 있을 때 이를 'Hello'로 변경해보세요.")

string = "hello"

print("capitalize() -> 문자열의 첫글자를 대문자로 변환")
print(string.capitalize())

print("----------------------------------------------------------")

print("044 endswith 메서드")
print("파일 이름이 문자열로 저장되어 있을 때 endswith 메서드를 사용해서 파일 이름이 'xlsx'로 끝나는지 확인해보세요.")

file_name = "보고서.xlsx"

print(file_name.endswith("xlsx"))

print("----------------------------------------------------------")

print("045 endswith 메서드")
print("파일 이름이 문자열로 저장되어 있을 때 endswith 메서드를 사용해서 파일 이름이 'xlsx' 또는 'xls'로 끝나는지 확인해보세요.")

file_name = "보고서.xls"

print(file_name.endswith(("xlsx", "xls")))

print("----------------------------------------------------------")

print("046 startswith 메서드")
print("파일 이름이 문자열로 저장되어 있을 때 startswith 메서드를 사용해서 파일 이름이 '2020'로 시작하는지 확인해보세요.")

file_name = "2020_보고서.xlsx"

print(file_name.startswith("2020"))

print("----------------------------------------------------------")

print("047 split 메서드")
print("다음과 같은 문자열이 있을 때 공백을 기준으로 문자열을 나눠보세요.")

a = "hello world"

a_split = a.split(" ")
print(a)

print("----------------------------------------------------------")

print("048 split 메서드")
print("다음과 같이 문자열이 있을 때 btc와 krw로 나눠보세요.")

ticker = "btc_krw"

print(ticker.split("_"))

print("----------------------------------------------------------")

print("049 split 메서드")
print("다음과 같이 날짜를 표현하는 문자열이 있을 때 연도, 월, 일로 나눠보세요.")

date = "2020-05-01"

date_split = date.split("-")

print(f"년: {date_split[0]} 월: {date_split[1]} 일: {date_split[2]}")

print("----------------------------------------------------------")

print("050 rstrip 메서드")
print("문자열의 오른쪽에 공백이 있을 때 이를 제거해보세요.")

data = "039490     "

print("rstrip() -> 오른쪽에 공백만 제거 / lstrip() -> 왼쪽의 공백만 제거")
print(data.rstrip())




